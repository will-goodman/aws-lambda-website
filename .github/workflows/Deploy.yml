name: Deploy to AWS

on: push

jobs:
  package-api:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --target=api -r ./api/requirements.txt
        working-directory: ./src
      - name: Test with pytest
        run: |
          pip install pytest
          pytest
        working-directory: ./src/api
      - name: Zip package
        run: zip -r ../../api.zip *
        working-directory: ./src/api
      - name: Upload api folder zip
        uses: actions/upload-artifact@v1
        with:
          name: api
          path: api.zip

  package-ui:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --target=ui -r ./ui/requirements.txt
        working-directory: ./src
      - name: Test with pytest
        run: |
          pip install pytest
          pytest
        working-directory: ./src/ui
      - name: Zip package
        run: zip -r ../../ui.zip *
        working-directory: ./src/ui
      - name: Upload ui folder zip
        uses: actions/upload-artifact@v1
        with:
          name: ui
          path: ui.zip

  terraform-deploy:
    needs: [package-api, package-ui]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download API deployment package
        uses: actions/download-artifact@v1
        with:
          name: api

      - name: Download UI deployment package
        uses: actions/download-artifact@v1
        with:
          name: ui

      - name: Install Terraform
        env:
          TERRAFORM_VERSION: "0.12.20"
        run: |
          tf_version=$TERRAFORM_VERSION
          wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
          unzip terraform_"$tf_version"_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

      - name: Verify Terraform version
        run: terraform --version
        working-directory: ./deploy

      - name: Terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init
        working-directory: ./deploy

      - name: Terraform validation
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: terraform validate
        working-directory: ./deploy

      - name: Terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: terraform plan -out=plan
        working-directory: ./deploy

      - name: Terraform apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: terraform apply -auto-approve "plan"
        working-directory: ./deploy
